name: dnscrypt-proxy

on:
  push:
    branches: 
      - main
    paths:
      - dnscrypt-proxy
      - .github/workflows/dnscrypt-proxy.yml

env:
  BUILD_VERSION: "2.0.45"
  DOCKER_CLI_EXPERIMENTAL: enabled
  REPOSITORY: jauderho/dnscrypt-proxy

jobs:

  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Source checkout
        uses: actions/checkout@v2

      - name: GitHub login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${GITHUB_ACTOR}
          password: ${{ secrets.CR_PAT }}

      - name: DockerHub login
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}      
 
      - name: Setup QEMU
        id: qemu
        uses: docker/setup-qemu-action@v1
      
      - name: Setup Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      
      - name: Available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: Docker metadata
        id: docker_meta
        uses: crazy-max/ghaction-docker-meta@v1
        with:
          images: ${REPOSITORY}
          label-custom: |
            org.opencontainers.image.created=$(date -u +'%Y-%m-%dT%H:%M:%SZ')
            org.opencontainers.image.version=${BUILD_VERSION}
            org.opencontainers.image.revision=$(git describe --tags --always --dirty)
          tag-sha: true
          tag-custom-only: true
          tag-custom: |
            docker.io/${REPOSITORY}:${BUILD_VERSION}
            docker.io/${REPOSITORY}:latest
            ghcr.io/${REPOSITORY}:${BUILD_VERSION}
            ghcr.io/${REPOSITORY}:latest
          
      - name: Available metadata
        run: echo ${{ steps.docker_meta.outputs.tags }} ${{ steps.docker_meta.outputs.labels }}

      - name: Cache docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${GITHUB_WORKFLOW}
          file: ./Dockerfile
          platforms: linux/amd64,linux/arm/v6,linux/arm/v7,linux/arm64,linux/ppc64le,linux/386
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.docker_meta.outputs.tags }}
          labels: ${{ steps.docker_meta.outputs.labels }}
